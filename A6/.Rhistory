subgroup3 <- which(pic4["color"]==unique(pic5["color"])[1])
subgroup4 <- which(pic4["color"]==unique(pic5["color"])[4])
subgroup3
subgroup4
pic5 <- l_getSavedStates(file = "pc5")
table(pic5["color"])
subgroup3 <- which(pic4["color"]==unique(pic5["color"])[1])
subgroup4 <- which(pic4["color"]==unique(pic5["color"])[3])
subgroup3
subgroup4
pic5 <- l_getSavedStates(file = "pc5")
table(pic5["color"])
subgroup3 <- which(pic4["color"]==unique(pic5["color"])[1])
subgroup4 <- which(pic4["color"]==unique(pic5["color"])[2])
subgroup3
subgroup4
pic5 <- l_getSavedStates(file = "pc5")
table(pic5["color"])
subgroup3 <- which(pic5["color"]==unique(pic5["color"])[1])
subgroup4 <- which(pic5["color"]==unique(pic5["color"])[3])
subgroup3
subgroup4
pic5["color"])[1]
pic5(["color"])[1]
pic5["color"][1]
pic5["color"][3]
unique(pic5["color"])[1]
unique(pic5["color"])[3]
unique(pic5["color"])[2]
pic5 <- l_getSavedStates(file = "pc5")
table(pic5["color"])
subgroup3 <- which(pic5["color"]==unique(pic5["color"])[2])
subgroup4 <- which(pic5["color"]==unique(pic5["color"])[3])
subgroup3
subgroup4
pic5 <- l_getSavedStates(file = "pc5")
table(pic5["color"])
subgroup3 <- which(pic5["color"]==unique(pic5["color"])[2])
subgroup4 <- which(pic5["color"]==unique(pic5["color"])[3])
subgroup3
subgroup4
pic3 <- l_getSavedStates(file="pc3")
l_copyStates(source = pic3, target = sa3)
plot(sa3)
table(pic3["color"])
group1 <- which(pic3["color"]==unique(pic3["color"])[1])
group2 <- which(pic3["color"]==unique(pic3["color"])[2])
group1
group2
pic4 <- l_getSavedStates(file = "pc4")
l_copyStates(source = pic4, target = sa3)
plot(sa3)
table(pic4["color"])
subgroup1 <- which(pic4["color"]==unique(pic4["color"])[1])
subgroup2 <- which(pic4["color"]==unique(pic4["color"])[3])
subgroup1
subgroup2
pic5 <- l_getSavedStates(file = "pc5")
l_copyStates(source = pic5, target = sa3)
plot(sa3)
table(pic5["color"])
subgroup3 <- which(pic5["color"]==unique(pic5["color"])[2])
subgroup4 <- which(pic5["color"]==unique(pic5["color"])[3])
subgroup3
subgroup4
data("crabSpecies", package = "loon.data")
summary(crabSpecies[group1, ])
summary(crabSpecies[group3, ])
data("crabSpecies", package = "loon.data")
summary(crabSpecies[subgroup1, ])
summary(crabSpecies[subgroup3, ])
summary(crabSpecies[subgroup2, ])
summary(crabSpecies[subgroup4, ])
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE,
fig.align = "center",
fig.width = 6,
fig.height = 5,
out.height = "20%")
set.seed(12314159)
library(loon.data)
library(loon)
library(gridExtra)
imageDirectory <- "./img"
dataDirectory <- "./data"
path_concat <- function(path1, ..., sep="/") {
# The "/" is standard unix directory seperator and so will
# work on Macs and Linux.
# In windows the separator might have to be sep = "\" or
# even sep = "\\" or possibly something else.
paste(path1, ..., sep = sep)
}
data("lepto", package = "loon.data")
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE,
fig.align = "center",
fig.width = 6,
fig.height = 5,
out.height = "20%")
set.seed(12314159)
library(loon.data)
library(loon)
library(gridExtra)
imageDirectory <- "./img"
dataDirectory <- "./data"
path_concat <- function(path1, ..., sep="/") {
# The "/" is standard unix directory seperator and so will
# work on Macs and Linux.
# In windows the separator might have to be sep = "\" or
# even sep = "\\" or possibly something else.
paste(path1, ..., sep = sep)
}
data("lepto", package = "loon.data")
pairs(prcomp(lepto)$x, pch=19)
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE,
fig.align = "center",
fig.width = 6,
fig.height = 5,
out.height = "20%")
set.seed(12314159)
library(loon.data)
library(loon)
library(gridExtra)
imageDirectory <- "./img"
dataDirectory <- "./data"
path_concat <- function(path1, ..., sep="/") {
# The "/" is standard unix directory seperator and so will
# work on Macs and Linux.
# In windows the separator might have to be sep = "\" or
# even sep = "\\" or possibly something else.
paste(path1, ..., sep = sep)
}
data("lepto", package = "loon.data")
library(PairViz)
order <- eulerian(5)
sa1 <- l_serialaxes(lepto[order], linkingGroup = "lepto",
axesLayout = "parallel", scaling =
"variable")
plot(sa1)
flipAxes <- function(data) {
dataCopy <- data
for (i in 1:ncol(data)) {
if (i%%2 == 0) dataCopy[,i] <- (-1) * dataCopy[,i]
}
dataCopy
}
sa3 <- l_serialaxes(flipAxes(lepto[order]), linkingGroup =
"lepto",
axesLayout = "parallel", scaling =
"variable")
plot(sa3)
pic3 <- l_getSavedStates(file="pc3")
l_copyStates(source = pic3, target = sa3)
plot(sa3)
table(pic3["color"])
group1 <- which(pic3["color"]==unique(pic3["color"])[1])
group2 <- which(pic3["color"]==unique(pic3["color"])[2])
group1
group2
pic4 <- l_getSavedStates(file = "pc4")
l_copyStates(source = pic4, target = sa3)
plot(sa3)
table(pic4["color"])
subgroup1 <- which(pic4["color"]==unique(pic4["color"])[1])
subgroup2 <- which(pic4["color"]==unique(pic4["color"])[3])
subgroup1
subgroup2
pic5 <- l_getSavedStates(file = "pc5")
l_copyStates(source = pic5, target = sa3)
plot(sa3)
table(pic5["color"])
subgroup3 <- which(pic5["color"]==unique(pic5["color"])[2])
subgroup4 <- which(pic5["color"]==unique(pic5["color"])[3])
subgroup3
subgroup4
data("crabSpecies", package = "loon.data")
summary(crabSpecies[subgroup1, ])
summary(crabSpecies[subgroup3, ])
summary(crabSpecies[subgroup2, ])
summary(crabSpecies[subgroup4, ])
pairs(prcomp(lepto)$x, pch=19, col=pic5["color"])
pairs(prcomp(lepto)$x, pch=19, col=adjustcolor(pic5["color"]))
pairs(prcomp(lepto)$x, pch=19, col=hex12tohex6(pic5["color"]))
pairs(prcomp(lepto)$x, pch=19, col=hex12tohex6(pic5["color"]))
pairs(prcomp(lepto)$x, pch=19, col=adjustcolor(hex12tohex6(pic5["color"]), 0.7))
pairs(prcomp(lepto)$x, pch=19, col=adjustcolor(hex12tohex6(pic5["color"]), 0.5))
pairs(prcomp(lepto)$x, pch=19, col=adjustcolor(hex12tohex6(pic5["color"]), 0.3))
data("crabSpecies", package = "loon.data")
summary(crabSpecies[subgroup1, ])
summary(crabSpecies[subgroup2, ])
summary(crabSpecies[subgroup3, ])
summary(crabSpecies[subgroup4, ])
data("crabSpecies", package = "loon.data")
summary(crabSpecies[subgroup1, ])
summary(crabSpecies[subgroup2, ])
summary(crabSpecies[subgroup3, ])
summary(crabSpecies[subgroup4, ])
pic5 <- l_getSavedStates(file = "pc5")
l_copyStates(source = pic5, target = sa3)
pic5 <- l_getSavedStates(file = "pc5")
l_copyStates(source = pic5, target = sa3)
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE,
fig.align = "center",
fig.width = 6,
fig.height = 5,
out.height = "20%")
set.seed(12314159)
library(loon.data)
library(loon)
library(gridExtra)
imageDirectory <- "./img"
dataDirectory <- "./data"
path_concat <- function(path1, ..., sep="/") {
# The "/" is standard unix directory seperator and so will
# work on Macs and Linux.
# In windows the separator might have to be sep = "\" or
# even sep = "\\" or possibly something else.
paste(path1, ..., sep = sep)
}
data("lepto", package = "loon.data")
library(PairViz)
order <- eulerian(5)
sa1 <- l_serialaxes(lepto[order], linkingGroup = "lepto",
axesLayout = "parallel", scaling =
"variable")
plot(sa1)
flipAxes <- function(data) {
dataCopy <- data
for (i in 1:ncol(data)) {
if (i%%2 == 0) dataCopy[,i] <- (-1) * dataCopy[,i]
}
dataCopy
}
sa3 <- l_serialaxes(flipAxes(lepto[order]), linkingGroup =
"lepto",
axesLayout = "parallel", scaling =
"variable")
plot(sa3)
pic3 <- l_getSavedStates(file="pc3")
l_copyStates(source = pic3, target = sa3)
plot(sa3)
table(pic3["color"])
group1 <- which(pic3["color"]==unique(pic3["color"])[1])
group2 <- which(pic3["color"]==unique(pic3["color"])[2])
group1
group2
pic4 <- l_getSavedStates(file = "pc4")
l_copyStates(source = pic4, target = sa3)
plot(sa3)
table(pic4["color"])
subgroup1 <- which(pic4["color"]==unique(pic4["color"])[1])
subgroup2 <- which(pic4["color"]==unique(pic4["color"])[3])
subgroup1
subgroup2
pic5 <- l_getSavedStates(file = "pc5")
l_copyStates(source = pic5, target = sa3)
plot(sa3)
table(pic5["color"])
subgroup3 <- which(pic5["color"]==unique(pic5["color"])[2])
subgroup4 <- which(pic5["color"]==unique(pic5["color"])[3])
subgroup3
subgroup4
data("crabSpecies", package = "loon.data")
summary(crabSpecies[subgroup1, ])
summary(crabSpecies[subgroup2, ])
summary(crabSpecies[subgroup3, ])
summary(crabSpecies[subgroup4, ])
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE,
fig.align = "center",
fig.width = 6,
fig.height = 5,
out.height = "20%")
set.seed(12314159)
library(loon.data)
library(loon)
library(gridExtra)
imageDirectory <- "./img"
dataDirectory <- "./data"
path_concat <- function(path1, ..., sep="/") {
# The "/" is standard unix directory seperator and so will
# work on Macs and Linux.
# In windows the separator might have to be sep = "\" or
# even sep = "\\" or possibly something else.
paste(path1, ..., sep = sep)
}
data("lepto", package = "loon.data")
library(PairViz)
order <- eulerian(5)
sa1 <- l_serialaxes(lepto[order], linkingGroup = "lepto",
axesLayout = "parallel", scaling =
"variable")
plot(sa1)
flipAxes <- function(data) {
dataCopy <- data
for (i in 1:ncol(data)) {
if (i%%2 == 0) dataCopy[,i] <- (-1) * dataCopy[,i]
}
dataCopy
}
sa3 <- l_serialaxes(flipAxes(lepto[order]), linkingGroup =
"lepto",
axesLayout = "parallel", scaling =
"variable")
plot(sa3)
pic3 <- l_getSavedStates(file="pc3")
l_copyStates(source = pic3, target = sa3)
plot(sa3)
table(pic3["color"])
group1 <- which(pic3["color"]==unique(pic3["color"])[1])
group2 <- which(pic3["color"]==unique(pic3["color"])[2])
group1
group2
pic4 <- l_getSavedStates(file = "pc4")
l_copyStates(source = pic4, target = sa3)
plot(sa3)
table(pic4["color"])
subgroup1 <- which(pic4["color"]==unique(pic4["color"])[1])
subgroup2 <- which(pic4["color"]==unique(pic4["color"])[3])
subgroup1
subgroup2
pic5 <- l_getSavedStates(file = "pc5")
l_copyStates(source = pic5, target = sa3)
plot(sa3)
table(pic5["color"])
subgroup3 <- which(pic5["color"]==unique(pic5["color"])[1])
subgroup4 <- which(pic5["color"]==unique(pic5["color"])[3])
subgroup3
subgroup4
data("crabSpecies", package = "loon.data")
summary(crabSpecies[subgroup1, ])
summary(crabSpecies[subgroup2, ])
summary(crabSpecies[subgroup3, ])
summary(crabSpecies[subgroup4, ])
pic5 <- l_getSavedStates(file = "pc5")
l_copyStates(source = pic5, target = sa3)
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE,
fig.align = "center",
fig.width = 6,
fig.height = 5,
out.height = "20%")
set.seed(12314159)
library(loon.data)
library(loon)
library(gridExtra)
imageDirectory <- "./img"
dataDirectory <- "./data"
path_concat <- function(path1, ..., sep="/") {
# The "/" is standard unix directory seperator and so will
# work on Macs and Linux.
# In windows the separator might have to be sep = "\" or
# even sep = "\\" or possibly something else.
paste(path1, ..., sep = sep)
}
data("lepto", package = "loon.data")
library(PairViz)
order <- eulerian(5)
sa1 <- l_serialaxes(lepto[order], linkingGroup = "lepto",
axesLayout = "parallel", scaling =
"variable")
plot(sa1)
flipAxes <- function(data) {
dataCopy <- data
for (i in 1:ncol(data)) {
if (i%%2 == 0) dataCopy[,i] <- (-1) * dataCopy[,i]
}
dataCopy
}
sa3 <- l_serialaxes(flipAxes(lepto[order]), linkingGroup =
"lepto",
axesLayout = "parallel", scaling =
"variable")
plot(sa3)
pic3 <- l_getSavedStates(file="pc3")
l_copyStates(source = pic3, target = sa3)
plot(sa3)
table(pic3["color"])
group1 <- which(pic3["color"]==unique(pic3["color"])[1])
group2 <- which(pic3["color"]==unique(pic3["color"])[2])
group1
group2
pic4 <- l_getSavedStates(file = "pc4")
l_copyStates(source = pic4, target = sa3)
plot(sa3)
table(pic4["color"])
subgroup1 <- which(pic4["color"]==unique(pic4["color"])[1])
subgroup2 <- which(pic4["color"]==unique(pic4["color"])[3])
subgroup1
subgroup2
pic5 <- l_getSavedStates(file = "pc5")
l_copyStates(source = pic5, target = sa3)
plot(sa3)
table(pic5["color"])
subgroup3 <- which(pic5["color"]==unique(pic5["color"])[2])
subgroup4 <- which(pic5["color"]==unique(pic5["color"])[3])
subgroup3
subgroup4
data("crabSpecies", package = "loon.data")
summary(crabSpecies[subgroup1, ])
summary(crabSpecies[subgroup2, ])
summary(crabSpecies[subgroup3, ])
summary(crabSpecies[subgroup4, ])
unique(pic5["color"])
colour <- crabSpecies
colour[crabSpecies$Species=="blue"&crabSpecies$Sex="male"]=unique(pic5["color"])[3]
colour <- crabSpecies
colour[crabSpecies$Species=="blue"&crabSpecies$Sex=="male"]=unique(pic5["color"])[3]
colour <- []
colour <- ()
colour <- matrix(1:200)
colour[crabSpecies$Species=="blue"&crabSpecies$Sex=="male"]=unique(pic5["color"])[3]
colour[crabSpecies$Species=="blue"&crabSpecies$Sex=="female"]=unique(pic5["color"])[1]
colour[crabSpecies$Species=="orange"&crabSpecies$Sex=="male"]=unique(pic5["color"])[2]
colour[crabSpecies$Species=="orange"&crabSpecies$Sex=="male"]=unique(pic5["color"])[4]
pairs(prcomp(lepto)$x, pch=19, col=adjustcolor(hex12tohex6(colour), 0.3))
colour <- matrix(1:200)
colour[crabSpecies$Species=="blue"&crabSpecies$Sex=="male"]=unique(pic5["color"])[3]
colour[crabSpecies$Species=="blue"&crabSpecies$Sex=="female"]=unique(pic5["color"])[1]
colour[crabSpecies$Species=="orange"&crabSpecies$Sex=="male"]=unique(pic5["color"])[2]
colour[crabSpecies$Species=="orange"&crabSpecies$Sex=="male"]=unique(pic5["color"])[4]
pairs(prcomp(lepto)$x, pch=19, col=adjustcolor(hex12tohex6(colour), 0.3))
colour <- matrix(1:200)
colour[crabSpecies$Species=="blue"&crabSpecies$Sex=="male"]=unique(pic5["color"])[3]
colour[crabSpecies$Species=="blue"&crabSpecies$Sex=="female"]=unique(pic5["color"])[1]
colour[crabSpecies$Species=="orange"&crabSpecies$Sex=="male"]=unique(pic5["color"])[2]
colour[crabSpecies$Species=="orange"&crabSpecies$Sex=="male"]=unique(pic5["color"])[4]
pairs(prcomp(lepto)$x, pch=19, col=adjustcolor(colour), 0.3))
colour <- matrix(1:200)
colour[crabSpecies$Species=="blue"&crabSpecies$Sex=="male"]=unique(pic5["color"])[3]
colour[crabSpecies$Species=="blue"&crabSpecies$Sex=="female"]=unique(pic5["color"])[1]
colour[crabSpecies$Species=="orange"&crabSpecies$Sex=="male"]=unique(pic5["color"])[2]
colour[crabSpecies$Species=="orange"&crabSpecies$Sex=="male"]=unique(pic5["color"])[4]
pairs(prcomp(lepto)$x, pch=19, col=adjustcolor(colour), 0.3))
colour <- matrix(1:200)
colour[crabSpecies$Species=="blue"&crabSpecies$Sex=="male"]=unique(pic5["color"])[3]
colour[crabSpecies$Species=="blue"&crabSpecies$Sex=="female"]=unique(pic5["color"])[1]
colour[crabSpecies$Species=="orange"&crabSpecies$Sex=="male"]=unique(pic5["color"])[2]
colour[crabSpecies$Species=="orange"&crabSpecies$Sex=="male"]=unique(pic5["color"])[4]
pairs(prcomp(lepto)$x, pch=19, col=adjustcolor(colour), 0.3)
View(colour)
colour <- matrix(1:200)
colour[crabSpecies$Species=="blue"&crabSpecies$Sex=="male"]=unique(pic5["color"])[3]
colour[crabSpecies$Species=="blue"&crabSpecies$Sex=="female"]=unique(pic5["color"])[1]
colour[crabSpecies$Species=="orange"&crabSpecies$Sex=="male"]=unique(pic5["color"])[2]
colour[crabSpecies$Species=="orange"&crabSpecies$Sex=="female"]=unique(pic5["color"])[4]
pairs(prcomp(lepto)$x, pch=19, col=adjustcolor(colour), 0.3)
colour <- matrix(1:200)
colour[crabSpecies$Species=="blue"&crabSpecies$Sex=="male"]=unique(pic5["color"])[3]
colour[crabSpecies$Species=="blue"&crabSpecies$Sex=="female"]=unique(pic5["color"])[1]
colour[crabSpecies$Species=="orange"&crabSpecies$Sex=="male"]=unique(pic5["color"])[2]
colour[crabSpecies$Species=="orange"&crabSpecies$Sex=="female"]=unique(pic5["color"])[4]
pairs(prcomp(lepto)$x, pch=19, col=adjustcolor(hex12tohex6(colour)), 0.3)
colour <- matrix(1:200)
colour[crabSpecies$Species=="blue"&crabSpecies$Sex=="male"]=unique(pic5["color"])[3]
colour[crabSpecies$Species=="blue"&crabSpecies$Sex=="female"]=unique(pic5["color"])[1]
colour[crabSpecies$Species=="orange"&crabSpecies$Sex=="male"]=unique(pic5["color"])[2]
colour[crabSpecies$Species=="orange"&crabSpecies$Sex=="female"]=unique(pic5["color"])[4]
pairs(prcomp(lepto)$x, pch=19,
col=adjustcolor(hex12tohex6(colour)), 0.3)
unique(pic5["color"])
colour <- matrix(1:200)
colour[crabSpecies$Species=="blue"&crabSpecies$Sex=="male"]=unique(pic5["color"])[3]
colour[crabSpecies$Species=="blue"&crabSpecies$Sex=="female"]=unique(pic5["color"])[1]
colour[crabSpecies$Species=="orange"&crabSpecies$Sex=="male"]=unique(pic5["color"])[2]
colour[crabSpecies$Species=="orange"&crabSpecies$Sex=="female"]=unique(pic5["color"])[4]
pairs(prcomp(lepto)$x, pch=19,
col=adjustcolor(hex12tohex6(colour), 0.3))
library(loon); library(PairViz)
x <- prcomp(lepto)$x
nav <- l_navgraph(x[, 1:3])
p <- nav$plot
g <- l_glyph_add_serialaxes(p, data = lepto[, eseq(ncol(lepto))],
showAxes = TRUE, showArea = TRUE, label = "serialaxes")
p["glyph"] <- g
km <- kmeans(lepto, centers = 4)
p["color"] <- km$cluster
library(loon); library(PairViz)
x <- prcomp(lepto)$x
nav <- l_navgraph(x[, 1:3])
p <- nav$plot
g <- l_glyph_add_serialaxes(p, data = lepto[, eseq(ncol(lepto))],
showAxes = TRUE, showArea = TRUE, label = "serialaxes")
p["glyph"] <- g
km <- kmeans(lepto, centers = 4)
p["color"] <- km$cluster
classes <- paste(crabSpecies[,1], crabSpecies[,2], sep = ":")
table(classes, km$cluster)
library(loon); library(PairViz)
x <- prcomp(lepto)$x
nav <- l_navgraph(x[, 1:3])
p <- nav$plot
g <- l_glyph_add_serialaxes(p, data = lepto[, eseq(ncol(lepto))],
showAxes = TRUE, showArea = TRUE, label = "serialaxes")
p["glyph"] <- g
l_saveStates(p,file="pc6")
pic6 <- l_getSavedStates(file = "pc6")
table(classes, p_saved)
pic6 <- l_getSavedStates(file = "pc6")
table(classes, p_savedStates["color"])
pic6 <- l_getSavedStates(file = "pc6")
table(classes, p_savedStates2["color"])
pic6 <- l_getSavedStates(file = "pc6")
table(classes, pic6["color"])
